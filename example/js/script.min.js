function ThreeSOSM(){this.surfaces={rectangle:this.Rectangle,cone:this.Cone,cylinder:this.Cylinder,sphere:this.Sphere,elips:this.Elips}}ThreeSOSM.prototype.Start=function(){let e=document.getElementsByClassName("threeSOSM");for(let t=0;t<e.length;t++)this.Create(e[t])},ThreeSOSM.prototype.Create=function(e){let t=e.offsetWidth,a=e.offsetHeight,n=e.dataset.surface,o=this.surfaces[n](e),r=new THREE.MeshNormalMaterial,s=new THREE.Mesh(o,r),i=new THREE.Scene;i.add(s);let d=new THREE.PerspectiveCamera(100,t/a,.1,5e3);d.position.set(0,0,1e3);let h=new THREE.WebGLRenderer({canvas:e});h.setClearColor(16777215),h.setSize(t,a),h.render(i,d),function e(){h.render(i,d),s.rotation.z+=180/Math.PI*1e-4,requestAnimationFrame(e)}();let u=0,l=0,p=function(e){e.pageY>l?s.rotation.x+=180/Math.PI*.001:e.pageY<l&&(s.rotation.x-=180/Math.PI*.001),e.pageX>u?s.rotation.y+=180/Math.PI*.001:e.pageX<u&&(s.rotation.y-=180/Math.PI*.001),l=e.pageY,u=e.pageX};e.addEventListener("mousedown",e=>{e.target.addEventListener("mousemove",p)}),e.addEventListener("mouseup",e=>{e.target.removeEventListener("mousemove",p)}),e.addEventListener("wheel",(function(e){let n=d.fov+-1*e.wheelDelta/100;n>130||n<70||(d=new THREE.PerspectiveCamera(n,t/a),d.position.set(0,0,1e3))})),e.addEventListener("mouseover",()=>{document.body.style.overflow="hidden";let e=window.innerWidth-document.body.offsetWidth;document.body.style.paddingRight=e+"px"}),e.addEventListener("mouseout",e=>{document.body.style.overflow="auto",document.body.style.paddingRight=0,e.target.removeEventListener("mousemove",p)})},ThreeSOSM.prototype.Rectangle=function(e){return new THREE.BoxGeometry(e.dataset.width,e.dataset.height,e.dataset.depth)},ThreeSOSM.prototype.Cone=function(e){return new THREE.ConeGeometry(e.dataset.radius,e.dataset.height,e.dataset.radial)},ThreeSOSM.prototype.Cylinder=function(e){return new THREE.CylinderGeometry(e.dataset.radius,e.dataset.radius,e.dataset.height,e.dataset.radial)},ThreeSOSM.prototype.Sphere=function(e){return new THREE.SphereGeometry(e.dataset.radius,e.dataset.width,e.dataset.height)},ThreeSOSM.prototype.Elips=function(e){return new THREE.ParametricBufferGeometry((function(t,a,n){t*=Math.PI,a*=2*Math.PI;let o=e.dataset.a*Math.sin(t)*Math.cos(a),r=e.dataset.b*Math.sin(t)*Math.sin(a),s=e.dataset.c*Math.cos(t);n.set(o,r,s)}),e.offsetWidth,e.offsetHeight)}; let three = new ThreeSOSM(); three.Start();